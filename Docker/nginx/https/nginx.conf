user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
        worker_connections 1024;
}

http {
        ##
        # Basic Settings
        ##

        sendfile on;

        tcp_nopush on;
        tcp_nodelay on;

        keepalive_timeout 65;
        types_hash_max_size 2048;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        access_log /var/log/nginx/access.log;

        server_tokens off;

        gzip on;

        ##
        # Upstreams
        ##

        upstream app {
                server app:4000 weight=5;
                server app:4001 weight=5;
        }

        upstream app_2 {
                server app_2:6000 weight=5;
                server app_2:6001 weight=5;
        }

        ##
        # Server
        ##

        server {
                listen 80 default_server;
                listen [::]:80 default_server ipv6only=on;

                server_name "example.com";

                charset utf-8;

                location / {
                        # HTTPS redirect
                        return 301 https://app$request_uri;
                }
        }

        server {
                listen 80;

                server_name "test.example.com";

                charset utf-8;

                location / {
                        return 301 https://test_app$request_uri;
                }
        }

        ##
        # HTTPS
        ##

        server {
                listen 443 ssl;
                listen [::]:443 ssl;

                server_name "example.com";

                ssl_protocols TLSv1.2;
                ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
                ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

                ssl_session_cache shared:SSL:10m;
                ssl_session_timeout 5m;
                ssl_session_tickets off;

                location / {
                        proxy_redirect off;
                        proxy_set_header Host $host;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Proto $https;
                        proxy_set_header X-Forwarded-Host $server_name;
                        
                        proxy_pass http://app;
                }
        }
}